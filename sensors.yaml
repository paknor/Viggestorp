- platform: rflink

- platform: moon

- platform: snmp
  host: 192.168.0.115
  name: CPU-temperature
  unit_of_measurement: '°C'
  community: monitor
  baseoid: 1.3.6.1.4.1.6574.1.2.0

- platform: snmp
  host: 192.168.0.115
  name: HD1-temperature
  unit_of_measurement: '°C'
  community: monitor
  baseoid: 1.3.6.1.4.1.6574.2.1.1.6.0

- platform: snmp
  host: 192.168.0.115
  name: HD2-temperature
  unit_of_measurement: '°C'
  community: monitor
  baseoid: 1.3.6.1.4.1.6574.2.1.1.6.1

- platform: snmp
  host: 192.168.0.115
  name: HDunit
  unit_of_measurement: 'B'
  community: monitor
  baseoid: 1.3.6.1.2.1.25.2.3.1.4.42

- platform: snmp
  host: 192.168.0.115
  name: HDtotal
  unit_of_measurement: 'B'
  community: monitor
  baseoid: 1.3.6.1.2.1.25.2.3.1.5.42

- platform: snmp
  host: 192.168.0.115
  name: HDused
  unit_of_measurement: 'B'
  community: monitor
  baseoid: 1.3.6.1.2.1.25.2.3.1.6.42

- platform: template
  sensors:
    space_left:
      value_template: '{{ ((states("sensor.hdtotal")|int|abs - states("sensor.hdused")|int|abs) * states("sensor.hdunit")|int|abs / 1024 /1024 / 1024) | round(1)}}'
      friendly_name: 'Utrymme kvar NAS'
      unit_of_measurement: 'Gb'

- platform: template 
  sensors:
    coffee_brewing:
      value_template: "{{ states.sensor.fibaro_system_fgwpef_wall_plug_gen5_power.state | float > 1000.0 }}" 
      friendly_name: "Brygger kaffe"

- platform: yr
  monitored_conditions:
    - temperature
    - symbol
    - precipitation
    - windSpeed
    - pressure
    - windDirection
    - humidity
    - fog
    - cloudiness
    - lowClouds
    - mediumClouds
    - highClouds
    - dewpointTemperature

- platform: command_line
  name: CPU-temperatur Pi
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: '{{ value | multiply(0.001) }}'

- platform: command_line
  name: Database
  command: "stat --printf='%s' /home/homeassistant/.homeassistant/home-assistant_v2.db"
  scan_interval: 60
  unit_of_measurement: "Mb"
  value_template: >-
    {% set bytes = value | int %}
    {% set Mbytes = (bytes / 1024 / 1024) | int %}
    {{ Mbytes }}

- platform: command_line
  name: "HASS uptime"
  command: echo "$(($(date +%s) - $(date --date="`systemctl show home-assistant.service -p ActiveEnterTimestamp | awk -F'=' '{print $2}'`" "+%s")))"
  scan_interval: 60
  value_template: >-
    {% set uptime = value | int %}
    {% set seconds = uptime % 60 %}
    {% set minutes = ((uptime % 3600) / 60) | int %}
    {% set hours = ((uptime % 86400) / 3600) | int %}
    {% set days = (uptime / 86400) | int %}

    {%- if days > 0 -%}
      {%- if days == 1 -%}
        1 day
      {%- else -%}
        {{ days }} days
      {%- endif -%}
    {%- endif -%}
    {%- if hours > 0 -%}
      {%- if days > 0 -%}
        {{ ', ' }}
      {%- endif -%}
      {%- if hours == 1 -%}
        1 hour
      {%- else -%}
        {{ hours }} hours
      {%- endif -%}
    {%- endif -%}
    {%- if minutes > 0 -%}
      {%- if days > 0 or hours > 0 -%}
        {{ ', ' }}
      {%- endif -%}
      {%- if minutes == 1 -%}
        1 minute
      {%- else -%}
        {{ minutes }} minutes
      {%- endif -%}
    {%- endif -%}
    {%- if seconds > 0 -%}
      {%- if days > 0 or hours > 0 or minutes > 0 -%}
        {{ ', ' }}
      {%- endif -%}
      {%- if seconds == 1 -%}
        1 second
      {%- else -%}
        {{ seconds }} seconds
      {%- endif -%}
    {%- endif -%}

- platform: synologydsm
  host: 192.168.0.115
  username: !secret synology_user
  password: !secret synology_pass
  monitored_conditions:
    - cpu_total_load
    - memory_real_usage
    - network_up
    - network_down
    - volume_size_total
    - volume_size_used
    - volume_percentage_used

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: memory_free
    - type: processor_use
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: since_last_boot

- platform: template
  sensors:
    alarm_time:
      friendly_name: 'Klockslag'
      value_template: '{{ "%0.02d:%0.02d" | format(states("input_slider.alarmhour") | int, states("input_slider.alarmminutes") | int) }}'

## Multisensor
- platform: mqtt
  state_topic: "bruh/sensornode1"
  name: "Ljus01"
  unit_of_measurement: '%'
  value_template: '{{ value_json.ldr }}'

- platform: mqtt  
  state_topic: "bruh/sensornode1"  
  name: "SN1 Temperature"  
  unit_of_measurement: "°C"  
  value_template: '{{ value_json.temperature | round(1) }}'  

- platform: mqtt
  state_topic: "bruh/sensornode1"
  name: "SN1 Real Feel"
  unit_of_measurement: "°C"
  value_template: '{{ value_json.heatIndex | round(1) }}'

- platform: mqtt  
  state_topic: "bruh/sensornode1"  
  name: "SN1 Humidity"  
  unit_of_measurement: "%"  
  value_template: '{{ value_json.humidity | round(1) }}'